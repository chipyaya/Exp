function Brick.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 7
push constant 0
pop this 6
call Bricks.getSpeed 0
pop this 4
push constant 100
pop this 2
push constant 8
pop this 3
push argument 0
push this 2
add
call Interface.getRightBound 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Interface.getRightBound 0
push this 2
sub
push constant 1
sub
pop argument 0
label IF_FALSE0
push argument 0
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop argument 0
label IF_FALSE1
push argument 0
pop this 0
push constant 255
push this 3
sub
pop this 1
push argument 1
pop this 5
push pointer 0
call Brick.draw 1
pop temp 0
push pointer 0
return
function Brick.newEmpty 0
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 5
push pointer 0
return
function Brick.draw 3
push argument 0
pop pointer 0
push this 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 19
call String.new 1
push constant 99
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
push constant 997
call Sys.error 1
pop temp 0
push constant 0
return
label IF_FALSE0
push this 5
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
push this 5
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 3
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push this 2
add
push this 3
sub
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push this 0
pop local 0
label WHILE_EXP0
push local 0
push this 3
add
push this 0
push this 2
add
lt
not
if-goto WHILE_END0
push local 0
push this 1
push local 0
push this 3
add
push this 1
push this 3
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 3
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE2
push this 5
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 5
pop local 1
push constant 2
pop local 2
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push local 1
add
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push local 2
pop local 0
label WHILE_EXP1
push this 0
push local 0
add
push this 0
push this 2
add
lt
not
if-goto WHILE_END1
push this 0
push local 0
add
push this 1
push this 0
push local 0
add
push local 2
sub
push this 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push this 0
push local 0
add
push this 1
push this 0
push local 0
add
push local 2
add
push this 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 2
push local 2
call Math.multiply 2
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE3
push this 5
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 20
add
push this 1
push this 3
push constant 2
call Math.divide 2
add
push this 0
push constant 80
add
push this 1
push this 3
push constant 2
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 20
add
push this 1
push this 3
push constant 2
call Math.divide 2
add
push this 0
push constant 30
add
push this 1
push constant 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 20
add
push this 1
push this 3
push constant 2
call Math.divide 2
add
push this 0
push constant 30
add
push this 1
push this 3
add
push constant 2
sub
call Screen.drawLine 4
pop temp 0
push this 0
push constant 80
add
push this 1
push this 3
push constant 2
call Math.divide 2
add
push this 0
push constant 70
add
push this 1
push constant 2
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 80
add
push this 1
push this 3
push constant 2
call Math.divide 2
add
push this 0
push constant 70
add
push this 1
push this 3
add
push constant 2
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
label IF_FALSE4
push constant 0
return
function Brick.clear 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Brick.dispose 0
push argument 0
pop pointer 0
push this 5
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Brick.clear 1
pop temp 0
label IF_FALSE0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Brick.move 0
push argument 0
pop pointer 0
push this 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
call Brick.clear 1
pop temp 0
push this 1
push this 4
sub
call UpperThorn.getUpperBound 0
gt
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 5
push constant 0
return
label IF_FALSE1
push this 6
push this 1
push this 4
sub
call Player.getSize 0
sub
call UpperThorn.getUpperBound 0
push constant 2
add
gt
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 5
call Player.hpReduceByBrick 0
pop temp 0
push constant 0
return
label IF_FALSE2
push this 1
push this 4
sub
pop this 1
push pointer 0
call Brick.draw 1
pop temp 0
push constant 0
return
function Brick.getType 0
push argument 0
pop pointer 0
push this 5
return
function Brick.getY 0
push argument 0
pop pointer 0
push this 1
return
function Brick.isPlayerStandingOn 0
push argument 0
pop pointer 0
push this 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 6
push this 6
return
label IF_FALSE0
push argument 1
push argument 3
add
push this 0
lt
push argument 1
push this 0
push this 2
add
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 6
push this 6
return
label IF_FALSE1
push argument 2
push argument 3
add
push constant 1
sub
push this 1
gt
not
push argument 2
push argument 3
add
push argument 4
add
push constant 1
sub
push this 1
lt
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 7
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop this 7
push constant 0
not
pop this 6
push pointer 0
call Brick.processThisType 1
pop temp 0
label IF_FALSE3
push this 6
return
label IF_FALSE2
push constant 0
pop this 6
push this 6
return
function Brick.processThisType 0
push argument 0
pop pointer 0
call Player.resetPixel 0
pop temp 0
call Player.resetReverse 0
pop temp 0
push this 5
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Player.hpIncrease 0
pop temp 0
label IF_FALSE0
push this 5
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Player.hpIncrease 0
pop temp 0
call Player.setSmallPixel 0
pop temp 0
label IF_FALSE1
push this 5
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
call Player.hpReduceByBrick 0
pop temp 0
label IF_FALSE2
push this 5
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
call Player.hpIncrease 0
pop temp 0
call Player.setReverse 0
pop temp 0
label IF_FALSE3
push constant 0
return
